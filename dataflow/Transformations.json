{
	"name": "Transformations",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "emissions_silver_layer",
						"type": "DatasetReference"
					},
					"name": "EmissionsDataset"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "emissions_gold_layer",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "emissionsadls",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "Rankingtoremoveduplicates"
				},
				{
					"name": "RemoveDuplicates"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Area as string,",
				"          Year as short,",
				"          {Savanna fires} as double,",
				"          {Forest fires} as double,",
				"          {Crop Residues} as double,",
				"          {Rice Cultivation} as double,",
				"          {Drained organic soils (CO2)} as double,",
				"          {Pesticides Manufacturing} as double,",
				"          {Food Transport} as double,",
				"          Forestland as double,",
				"          {Net Forest conversion} as double,",
				"          {Food Household Consumption} as double,",
				"          {Food Retail} as double,",
				"          {On-farm Electricity Use} as double,",
				"          {Food Packaging} as double,",
				"          {Agrifood Systems Waste Disposal} as double,",
				"          {Food Processing} as double,",
				"          {Fertilizers Manufacturing} as double,",
				"          IPPU as double,",
				"          {Manure applied to Soils} as double,",
				"          {Manure left on Pasture} as double,",
				"          {Manure Management} as double,",
				"          {Fires in organic soils} as double,",
				"          {Fires in humid tropical forests} as double,",
				"          {On-farm energy use} as double,",
				"          {Rural population} as double,",
				"          {Urban population} as double,",
				"          {Total Population - Male} as double,",
				"          {Total Population - Female} as double,",
				"          total_emission as double,",
				"          {Average Temperature °C} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmissionsDataset",
				"EmissionsDataset window(over(Area,",
				"          Year),",
				"     asc(Area, true),",
				"     RNK = rowNumber()) ~> Rankingtoremoveduplicates",
				"Rankingtoremoveduplicates filter(RNK==1) ~> RemoveDuplicates",
				"RemoveDuplicates sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Area as string,",
				"          Year as string,",
				"          {Savanna fires} as string,",
				"          {Forest fires} as string,",
				"          {Crop Residues} as string,",
				"          {Rice Cultivation} as string,",
				"          {Drained organic soils (CO2)} as string,",
				"          {Pesticides Manufacturing} as string,",
				"          {Food Transport} as string,",
				"          Forestland as string,",
				"          {Net Forest conversion} as string,",
				"          {Food Household Consumption} as string,",
				"          {Food Retail} as string,",
				"          {On-farm Electricity Use} as string,",
				"          {Food Packaging} as string,",
				"          {Agrifood Systems Waste Disposal} as string,",
				"          {Food Processing} as string,",
				"          {Fertilizers Manufacturing} as string,",
				"          IPPU as string,",
				"          {Manure applied to Soils} as string,",
				"          {Manure left on Pasture} as string,",
				"          {Manure Management} as string,",
				"          {Fires in organic soils} as string,",
				"          {Fires in humid tropical forests} as string,",
				"          {On-farm energy use} as string,",
				"          {Rural population} as string,",
				"          {Urban population} as string,",
				"          {Total Population - Male} as string,",
				"          {Total Population - Female} as string,",
				"          total_emission as string,",
				"          {Average Temperature °C} as string",
				"     ),",
				"     partitionFileNames:['sourcepbi.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          area = Area,",
				"          year = Year,",
				"          savanna_fires = {Savanna fires},",
				"          forest_fires = {Forest fires},",
				"          crop_residues = {Crop Residues},",
				"          rice_cultivation = {Rice Cultivation},",
				"          drained_organic_soils = {Drained organic soils (CO2)},",
				"          pest_manufacturing = {Pesticides Manufacturing},",
				"          food_transport = {Food Transport},",
				"          forestland = Forestland,",
				"          net_forest_conversion = {Net Forest conversion},",
				"          food_household_conversion = {Food Household Consumption},",
				"          food_retail = {Food Retail},",
				"          onfm_electricity = {On-farm Electricity Use},",
				"          food_packaging = {Food Packaging},",
				"          agri_waste_disposal = {Agrifood Systems Waste Disposal},",
				"          food_processing = {Food Processing},",
				"          fert_manufacturing = {Fertilizers Manufacturing},",
				"          ippu = IPPU,",
				"          manure_on_soil = {Manure applied to Soils},",
				"          manure_on_pasture = {Manure left on Pasture},",
				"          manure_management = {Manure Management},",
				"          fires_in_organic_soil = {Fires in organic soils},",
				"          fires_in_humid_forest = {Fires in humid tropical forests},",
				"          on_farm_energy_use = {On-farm energy use},",
				"          rural_pop = {Rural population},",
				"          urban_pop = {Urban population},",
				"          tot_pop_m = {Total Population - Male},",
				"          tot_pop_f = {Total Population - Female},",
				"          tot_emission = total_emission,",
				"          avg_temp = {Average Temperature °C}",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}